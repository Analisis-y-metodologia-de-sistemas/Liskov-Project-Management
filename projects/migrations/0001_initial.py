# Generated by Django 5.2.7 on 2025-10-12 18:12

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Nombre del proyecto",
                        max_length=200,
                        verbose_name="Nombre",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Descripción detallada del proyecto",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PLANNING", "Planificación"),
                            ("IN_PROGRESS", "En Progreso"),
                            ("ON_HOLD", "En Pausa"),
                            ("COMPLETED", "Completado"),
                            ("CANCELLED", "Cancelado"),
                        ],
                        default="PLANNING",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Fecha de inicio")),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de fin"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última actualización"
                    ),
                ),
                (
                    "product_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="owned_projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Product Owner",
                    ),
                ),
                (
                    "scrum_master",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="managed_projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Scrum Master",
                    ),
                ),
                (
                    "team_members",
                    models.ManyToManyField(
                        blank=True,
                        related_name="projects",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Miembros del equipo",
                    ),
                ),
            ],
            options={
                "verbose_name": "Proyecto",
                "verbose_name_plural": "Proyectos",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Sprint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nombre")),
                (
                    "goal",
                    models.TextField(
                        help_text="Meta u objetivo principal del sprint",
                        verbose_name="Objetivo del Sprint",
                    ),
                ),
                (
                    "number",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Número de Sprint",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PLANNED", "Planificado"),
                            ("ACTIVE", "Activo"),
                            ("COMPLETED", "Completado"),
                            ("CANCELLED", "Cancelado"),
                        ],
                        default="PLANNED",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Fecha de inicio")),
                ("end_date", models.DateField(verbose_name="Fecha de fin")),
                (
                    "velocity",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Puntos de historia completados",
                        null=True,
                        verbose_name="Velocidad",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última actualización"
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sprints",
                        to="projects.project",
                        verbose_name="Proyecto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sprint",
                "verbose_name_plural": "Sprints",
                "ordering": ["-number"],
                "unique_together": {("project", "number")},
            },
        ),
        migrations.CreateModel(
            name="UserStory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                (
                    "description",
                    models.TextField(
                        help_text="Como [rol], quiero [funcionalidad] para [beneficio]",
                        verbose_name="Descripción",
                    ),
                ),
                (
                    "acceptance_criteria",
                    models.TextField(
                        help_text="Condiciones que deben cumplirse para considerar la historia completa",
                        verbose_name="Criterios de aceptación",
                    ),
                ),
                (
                    "story_points",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Puntos de historia",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Baja"),
                            ("MEDIUM", "Media"),
                            ("HIGH", "Alta"),
                            ("CRITICAL", "Crítica"),
                        ],
                        default="MEDIUM",
                        max_length=20,
                        verbose_name="Prioridad",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("BACKLOG", "Product Backlog"),
                            ("TODO", "Por Hacer"),
                            ("IN_PROGRESS", "En Progreso"),
                            ("IN_REVIEW", "En Revisión"),
                            ("DONE", "Completada"),
                            ("BLOCKED", "Bloqueada"),
                        ],
                        default="BACKLOG",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última actualización"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_stories",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Asignado a",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_stories",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creado por",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_stories",
                        to="projects.project",
                        verbose_name="Proyecto",
                    ),
                ),
                (
                    "sprint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="user_stories",
                        to="projects.sprint",
                        verbose_name="Sprint",
                    ),
                ),
            ],
            options={
                "verbose_name": "Historia de Usuario",
                "verbose_name_plural": "Historias de Usuario",
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Título")),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Descripción"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("TODO", "Por Hacer"),
                            ("IN_PROGRESS", "En Progreso"),
                            ("DONE", "Completada"),
                        ],
                        default="TODO",
                        max_length=20,
                        verbose_name="Estado",
                    ),
                ),
                (
                    "estimated_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Horas estimadas",
                    ),
                ),
                (
                    "actual_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Horas reales",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última actualización"
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Asignado a",
                    ),
                ),
                (
                    "user_story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="projects.userstory",
                        verbose_name="Historia de usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarea",
                "verbose_name_plural": "Tareas",
                "ordering": ["status", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Contenido")),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Fecha de creación"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Última actualización"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Autor",
                    ),
                ),
                (
                    "user_story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="projects.userstory",
                        verbose_name="Historia de usuario",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comentario",
                "verbose_name_plural": "Comentarios",
                "ordering": ["-created_at"],
            },
        ),
    ]
